# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build-dependencies:
    docker:
      - image: circleci/node:14
    working_directory: ~/codesandbox
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
            - packages/cli/node_modules
            - packages/git-extractor/node_modules
            - packages/import-utils/node_modules
          key: v2-dependencies-{{ checksum "yarn.lock" }}

      # run tests!
      - run: yarn build
      - run: yarn test

      - save_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/codesandbox
  create-docker-image:
    machine: true
    working_directory: ~/codesandbox
    parameters:
      user:
        type: string
        default: '$DOCKER_USER'
      password:
        type: string
        default: '$DOCKER_PWD'
    steps:
      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Docker Sign In
          command:
            '[ -n "<< parameters.user >>" ] && echo << parameters.password >> |
            docker login -u << parameters.user >> --password-stdin || true'
      - run:
          name: Create Dockerfile
          command: |
            cat > Dockerfile <<EOF
            FROM node:14.13.1
            WORKDIR /app
            COPY . /app

            ENV NODE_ENV=production

            CMD ["node", "./packages/git-extractor/dist/index.js"]
            EOF
      - run:
          name: Create Image
          command:
            '[ -n "<< parameters.user >>" ] && docker build -t
            codesandbox/importers:${CIRCLE_SHA1:0:7} . || true'
      - run:
          name: Push Image
          command:
            '[ -n "<< parameters.user >>" ] && docker push
            codesandbox/importers:${CIRCLE_SHA1:0:7} || true'

  deploy-to-staging:
    requires:
      - deploy-staging-approval
    docker:
      - image: curlimages/curl:7.65.3
    steps:
      - run:
          name: Deploy Image
          command: |
            curl --show-error --fail -X POST \
            https://deploy-api.ops.csb.dev/image \
            -H 'Accept: */*' \
            -H 'Authorization: Bearer '$DEPLOY_TOKEN'' \
            -H 'Content-Type: application/json' \
            -d '{
              "env": "staging",
              "image": "githubImporters",
              "tag": "'${CIRCLE_SHA1:0:7}'",
              "deploy": true
            }'
  deploy-to-production:
    requires:
      - deploy-production-approval
    docker:
      - image: curlimages/curl:7.65.3
    steps:
      - run:
          name: Deploy Image
          command: |
            curl --show-error --fail -X POST \
            https://deploy-api.ops.csb.dev/image \
            -H 'Accept: */*' \
            -H 'Authorization: Bearer '$DEPLOY_TOKEN'' \
            -H 'Content-Type: application/json' \
            -d '{
              "env": "prod",
              "image": "githubImporters",
              "tag": "'${CIRCLE_SHA1:0:7}'",
              "deploy": true
            }'

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-dependencies
      - create-docker-image:
          requires:
            - build-dependencies
      - deploy-staging-approval:
          type: approval
      - deploy-to-staging:
          requires:
            - deploy-staging-approval
            - create-docker-image
      - deploy-production-approval:
          type: approval
      - deploy-to-production:
          requires:
            - deploy-production-approval
            - build-dependencies
            - create-docker-image
